[{"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\index.js":"1","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\App.js":"2","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\context\\AuthContext.js":"4","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\api.js":"5","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\ProductDetails.jsx":"6","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Products.jsx":"7","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Home.jsx":"8","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Profile.jsx":"9","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Login.jsx":"10","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Register.jsx":"11","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Footer.jsx":"12","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Header.jsx":"13"},{"size":842,"mtime":1685697880000,"results":"14","hashOfConfig":"15"},{"size":1469,"mtime":1685888447430,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1685697880000,"results":"17","hashOfConfig":"15"},{"size":423,"mtime":1685697880000,"results":"18","hashOfConfig":"15"},{"size":213,"mtime":1685697880000,"results":"19","hashOfConfig":"15"},{"size":8012,"mtime":1685697880000,"results":"20","hashOfConfig":"15"},{"size":5392,"mtime":1685697880000,"results":"21","hashOfConfig":"15"},{"size":2095,"mtime":1685897441642,"results":"22","hashOfConfig":"15"},{"size":12399,"mtime":1685697880000,"results":"23","hashOfConfig":"15"},{"size":4930,"mtime":1685697880000,"results":"24","hashOfConfig":"15"},{"size":5453,"mtime":1685697880000,"results":"25","hashOfConfig":"15"},{"size":352,"mtime":1685889368470,"results":"26","hashOfConfig":"15"},{"size":2323,"mtime":1685896010026,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1q71rs7",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\index.js",[],[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\App.js",["73","74","75","76"],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\context\\AuthContext.js",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\api.js",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\ProductDetails.jsx",["77","78"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { axiosRequest } from \"../api\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useForm } from \"react-hook-form\";\n\nconst ProductDetails = () => {\n  const goto = useNavigate()\n  const location = useLocation();\n  const pid = location.state?.productid;\n  const [post, setPost] = useState(null);\n  const { profile } = useContext(AuthContext)\n\n  useEffect(() => {\n    axiosRequest\n      .get(`/post/${pid}/`, { headers: { Authorization: null } })\n      .then((res) => setPost(res.data));\n  }, []);\n\n  const [newComment, setNewComment] = useState(\"\");\n  const handleCommentChange = (event) => {\n    setNewComment(event.target.value);\n  };\n  const handleCommentSubmit = (event) => {\n    event.preventDefault();\n    if (!profile){ goto(\"/login\") } else {\n      axiosRequest.post(`/post-comments/`, {\n        by_user: profile.user.id,\n        comment: newComment,\n        post: pid,\n      }).then(res=>{\n        setNewComment(\"\");\n        setPost(current=> \n          ({ ...current, \"comments\": [...current.comments, res.data], })\n        )\n       })\n    }\n  };\n\n  const handleLike = ()=>{\n    if (!profile){\n      goto(\"/login\")\n    } else {\n      if (post.liked_by.includes(profile.user.id)){\n        axiosRequest.patch(`/post/${pid}/`, { \n          liked_by: post.liked_by.filter(i=> i!==profile.user.id)\n        });\n        setPost(current=>({\n          ...current,\n          liked_by: post.liked_by.filter(i=> i!== profile.user.id)\n        }))\n      } else {\n        axiosRequest.patch(`/post/${pid}/`, { \n          liked_by: [...post.liked_by, profile.user.id] \n        });\n        setPost(current=>({\n          ...current,\n          liked_by: [...post.liked_by, profile.user.id]\n        }))\n      }\n    }\n  }\n\n  const [showBuyForm, setShowBuyForm] = useState(false)\n  const { handleSubmit, register, formState: { errors } } = useForm()\n  const handleMessageSubmit = (formData) =>{\n    if (!profile){\n      goto(\"/login\")\n    } else {\n      axiosRequest\n        .post(`/inbox/`, {\n          ...formData, \n          post: pid,\n          by_user: profile.user.id,\n        })\n    }\n    alert(\"Your has been successfully sent to the post owner!\")\n  }\n\n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>New arrivals</h4>\n                <h2>Products Page</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {!post ? <h3 align=\"center\" className=\"mt-5\">Loading...</h3>: \n<div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <img\n              src={post.imageurl}\n              alt=\"Product Image\"\n              className=\"img-fluid rounded\"\n            />\n          </div>\n          {!showBuyForm ? \n          <div className=\"col-lg-6\">\n            <h2>{post.title}</h2>\n            <p className=\"mt-2\" style={{ cursor: \"pointer\" }} onClick={handleLike}>\n            <span className=\"d-inline-block\" data-toggle=\"tooltip\" data-placement=\"top\" \n              title={\n                profile\n                  ? post.liked_by.includes(profile.user.id)\n                    ? 'Liked'\n                    : 'Not Liked'\n                  : 'Login to Like'\n              }\n            >\n              <i className={`fa fa-heart mr-2 text-${profile && post.liked_by.includes(profile.user.id) ? \"danger\" : \"dark\"}`} />\n            </span>\n              <strong className=\"font-weight-bold\">{post.liked_by.length}</strong>\n            </p>\n            <p className=\"mt-2\">\n              <strong className=\"font-weight-bold\">Price: ${post.price}</strong>\n            </p>\n            <p className=\"mt-2\">\n              <strong className=\"font-weight-bold\">Dimensions:</strong>&nbsp;{post.dimensions}\n            </p>\n            <p>\n              <strong className=\"font-weight-bold\">Address:</strong>&nbsp;{post.address}\n            </p>\n            <p className=\"mt-2\">{post.description}</p>\n            <p>\n              <strong className=\"font-weight-bold\">Posted:</strong>&nbsp;{post.created_at}\n            </p>\n            <button className=\"btn btn-primary mt-3\" onClick={()=>setShowBuyForm(true)}>Buy Now</button>\n          </div>\n           : <div className=\"col-lg-6\">\n  <button className=\"btn btn-link\" onClick={()=> setShowBuyForm(false)}>\n  <i className=\"fa fa-arrow-left\" /> Product Details\n      </button>\n<form onSubmit={handleSubmit(handleMessageSubmit)} className=\"form mt-4\">\n      <div className=\"form-group \">\n        <label htmlFor=\"name\">Name</label>\n        <input \n          className=\"form-control\"\n          {...register(\"name\", {\n            required: \"This field is required\",\n            minLength: { value: 3, message: \"Your name should have at least 3 characters.\" },\n          })} \n        />    \n        {errors.name && <small className=\"text-danger\">{errors.name.message}</small>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"phoneNumber\">Phone Number</label>\n        <input \n          className=\"form-control\"\n          {...register(\"phone_number\", {\n            required: \"This field is required\",\n            minLength: { value: 10, message: \"Your phone should have at least 10 numbers.\" },\n          })} \n        />    \n        {errors.phone_number && <small className=\"text-danger\">{errors.phone_number.message}</small>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n                <input \n                  className=\"form-control\"\n                  {...register(\"email\", { required: \"This field is required\", })} \n                />    \n                {errors.email && <small className=\"text-danger\">{errors.email.message}</small>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"message\">Message</label>\n        <textarea\n          className=\"form-control\"\n          id=\"message\"\n          name=\"message\"\n          rows=\"4\"\n          {...register('message', { required: 'Message is required' })}        \n          ></textarea>\n          {errors.message && <small className=\"text-danger\">{errors.message.message}</small>}\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        {profile? \"Send Message\": \"Login To Contact\"}\n      </button>\n    </form>             \n           </div>}\n        </div>\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h3>User Reviews</h3>\n            {post.comments.length > 0 && post.comments.map(cmnt=>(\n            <div key={cmnt.id} className=\"media mt-3\">\n              <img src={cmnt.user.avatar} style={{ height: \"50px\", width: \"50px\", borderRadius: \"100%\" }} alt=\"User Avatar\" className=\"mr-3\" />\n              <div className=\"media-body\">\n                <h5 className=\"mt-0\">{cmnt.user.name}</h5>\n                <p>{cmnt.timestamp}</p>\n                <p>{cmnt.comment}</p>\n              </div>\n            </div>          \n              ))\n          }\n          </div>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"col-lg-12\">\n            <form onSubmit={handleCommentSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"new-comment\">Add Comment</label>\n                <textarea\n                  id=\"new-comment\"\n                  className=\"form-control\"\n                  value={newComment}\n                  onChange={handleCommentChange}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {profile? \"Submit Comment\": \"Login to add Comment\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>    }\n      \n    </>\n  );\n};\n\nexport default ProductDetails;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Products.jsx",["79","80","81","82","83"],[],"import { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { axiosRequest } from \"../api\";\nimport Footer from \"../components/Footer\";\n\nconst Products = () => {\n  const location = useLocation();\n  const [cat, setCat] = useState(location.state?.cat);\n  const [q, setQ] = useState(\"\");\n\n  const [posts, setPosts] = useState(null);\n  const [categories, setCategories] = useState(null);\n\n  useEffect(() => {\n    setPosts(null);\n    axiosRequest\n      .get(`/post/?category=${cat || \"\"}&search=${q}`, {\n        headers: { Authorization: null },\n      })\n      .then((res) => setPosts((_) => res.data));\n  }, [cat, q]);\n\n  useEffect(() => {\n    axiosRequest\n      .get(`/post-categories/`, { headers: { Authorization: null } })\n      .then((res) =>\n        setCategories([\n          {\n            id: \"\",\n            products_count: \"\",\n            name: \"All Categories\",\n          },\n          ...res.data,\n        ])\n      );\n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const q = e.target[\"search\"].value;\n    const cat = e.target[\"category\"].value;\n    setQ((_) => q);\n    setCat((_) => cat);\n  };\n\n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>new arrivals</h4>\n                <h2>Products Page</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"products\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <form\n              onSubmit={handleSearch}\n              className=\"form col-md-12 row ml-1 mr-1\"\n            >\n              <h3 className=\"Products mb-2\">Products</h3>\n              <input\n                name=\"search\"\n                placeholder=\"Search for products ..\"\n                className=\"form-control\"\n              >\n              </input>\n              <select\n                name=\"category\"\n                className=\"form-control mt-2\"\n                defaultValue={cat}\n              >\n                {categories &&\n                  categories.map((cati) => (\n                    <option\n                      key={cati.id}\n                      value={cati.id}\n                      selected={cati.id == cat}\n                    >\n                      {cati.name}\n                    </option>\n                  ))}\n              </select>\n              <button className=\"btn btn-primary mt-2\">Search</button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"products\" style={{ marginTop: \"2%\" }}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"filters\"></div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"filters-content\">\n                <div className=\"row grid\">\n                  {posts\n                    ? (\n                      posts.length == 0\n                        ? (\n                          <>\n                            <img src=\"https://bagbazaars.com/assets/img/no-product-found.png\" />\n                          </>\n                        )\n                        : (\n                          posts.map((post, i) => (\n                            <div className=\"col-lg-4 col-md-4 all des\" key={i}>\n                              <div className=\"product-item\">\n                                <Link\n                                  to={`/product-details`}\n                                  state={{ productid: post.id }}\n                                >\n                                  <img src={post.imageurl} alt=\"\"\n                                  style={{ width: \"100%\", height: \"280px\" }}\n                                  />\n                                </Link>\n                                <div className=\"down-content\">\n                                  <Link\n                                    to={`/product-details`}\n                                    state={{ productid: post.id }}\n                                  >\n                                    <h4 className=\"w-75\">{post.title}</h4>\n                                  </Link>\n                                  <h6>$18.25</h6>\n                                  <p>{post.description}</p>\n                                  <ul className=\"stars\">\n                                    <li>\n                                      <i className=\"fa fa-heart\" />\n                                    </li>\n                                    <li className=\"ml-1\">\n                                      {post.liked_by.length}\n                                    </li>\n                                  </ul>\n                                  <span>Reviews ({post.comments_count})</span>\n                                </div>\n                              </div>\n                            </div>\n                          ))\n                        )\n                    )\n                    : (\n                      \"Loading\"\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Home.jsx",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Profile.jsx",["84","85","86","87","88","89"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { useForm } from 'react-hook-form';\nimport { axiosRequest } from \"../api\"\n\nconst Profile= () => {\n  const goto= useNavigate()\n  const [showTab, setShowTab] = useState(1)\n  const { profile, isAuthenticated } = useContext(AuthContext)\n  const { handleSubmit, register, formState: { errors }, reset } = useForm({ shouldUnregister: true })\n  const [myposts, setMyposts] =  useState(null)\n  const [inbox, setInbox] = useState(null)\n  const [cats, setCats] = useState(null)\n  const token = sessionStorage.getItem(\"token\")\n\n  useEffect(()=>{\n    if (!(token && token != \"null\")){ goto(\"/login\") }\n  }, [])\n\n  useEffect(()=>{\n      if (profile && showTab === 2){\n        axiosRequest.get(`/post/?owner__id=${profile?.user.id}`)\n        .then(res=> setMyposts(res.data))\n      } else if (profile && showTab === 3){\n        axiosRequest.get(`/inbox/?post__owner__id=${profile.user.id}`)\n        .then(res=> setInbox(res.data))\n      } else if (showTab === 4){\n        axiosRequest.get(`/post-categories/`).then(res=>setCats(res.data))\n      }\n    }, [showTab])\n\n  const handleProfileSubmit = (formData, e) =>{\n    const avatar = e.target[\"avatar\"].files[0]\n    axiosRequest\n      .patch(`/user/${profile.user.id}/`, formData)\n      .then(res=>{\n        axiosRequest.patch(`/profile/20/`, {\n          avatar: avatar,\n          phonenumber: formData.phone_number,\n        }, { headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Token ${sessionStorage.getItem(\"token\")}`,\n        }})\n        alert(\"Profile updated!\")\n      })\n  }\n\n  const handlePostDelete = (id)=>{\n    const confirmed = window.confirm(`Are you sure you want to delete this post with id ${id}?`);\n    if (confirmed) {\n      axiosRequest.delete(`/post/${id}/`).then(()=>{\n        setMyposts(old=> old.filter(o=> o.id != id))\n      })\n    }\n  }\n\n  const handleNewPost = (formData, e) => {\n    const image = e.target[\"image\"].files[0]\n    axiosRequest\n    .post(`/post/`, { \n      ...formData, \n      image,\n      owner: profile.user.id,\n     }, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Token ${sessionStorage.getItem(\"token\")}`,\n      }\n    }).then(res=>{\n      alert(\"Your post has been successfully published!\")\n      reset();\n    })\n  }\n\n  return (\n<>\n      <div className=\"page-heading products-heading header-text\"></div>\n    <div className=\"container mt-5 pt-5\">\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          {/* Sidebar */}\n          <div className=\"sidebar\">\n            <ul className=\"list-group\" style={{ cursor: \"pointer\" }}>\n              <li className=\"list-group-item\" onClick={()=>setShowTab(1)}>Profile</li>\n              <li className=\"list-group-item\" onClick={()=>setShowTab(4)}>New Post</li>\n              <li className=\"list-group-item\" onClick={()=>setShowTab(2)}>My Posts</li>\n              <li className=\"list-group-item\" onClick={()=>setShowTab(3)}>Inbox</li>\n              <li className=\"list-group-item\" onClick={()=>goto(\"/logout\")}>Logout</li>\n\n            </ul>\n          </div>\n        </div>\n        {profile ? \n<div className=\"col-lg-9\">\n          {/* Profile Details */}\n        {showTab === 1 &&\n            <div className=\"profile-details\">\n            <h2>Profile Details</h2>\n            <img src={\"\"} />\n            <form onSubmit={handleSubmit(handleProfileSubmit)} encType=\"multipart/form-data\">\n              <div className=\"form-group\">\n                <label>Username *</label>\n                <input \n                  className=\"form-control\"\n                  defaultValue={profile.user.username}\n                  {...register(\"username\", {\n                    required: \"This field is required\",\n                    minLength: { value: 3, message: \"Username should have at least 3 characters.\" },\n                    maxLength: { value: 6, message: \"Username should not exceed 6 characters.\" },\n                  })} \n                />    \n                {errors.username && <small className=\"text-danger\">{errors.username.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>Name *</label>\n                <input \n                  defaultValue={profile.user.first_name}\n                  className=\"form-control\"\n                  {...register(\"first_name\", {\n                    required: \"This field is required\",\n                    minLength: { value: 3, message: \"Your name should have at least 3 characters.\" },\n                  })} \n                />    \n                {errors.first_name && <small className=\"text-danger\">{errors.first_name.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>Lastname</label>\n                <input \n                  defaultValue={profile.user.last_name}\n                  className=\"form-control\"\n                  {...register(\"last_name\", { required: false })} \n                />    \n                {errors.last_name && <small className=\"text-danger\">{errors.last_name.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>Email *</label>\n                <input \n                  defaultValue={profile.user.email}\n                  className=\"form-control\"\n                  {...register(\"email\", { required: \"This field is required\", })} \n                />    \n                {errors.email && <small className=\"text-danger\">{errors.email.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>Avatar</label>\n                <input\n                 type=\"file\" className=\"form-control-file\" \n                  {...register(\"avatar\", { required: false })} \n                 />\n              </div>\n              <div className=\"form-group\">\n                <label>Phone Number</label>\n        <input \n          className=\"form-control\"\n          defaultValue={profile.phonenumber}\n          {...register(\"phone_number\", {\n            required: \"This field is required\",\n            minLength: { value: 10, message: \"Your phone should have at least 10 numbers.\" },\n          })} \n        />    \n        {errors.phone_number && <small className=\"text-danger\">{errors.phone_number.message}</small>}\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </form>\n          </div>         }\n          \n\n          {/* My Posts */}\n          {showTab === 2 &&\n<div className=\"my-posts\">\n            <h2>My Posts</h2>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Date</th>\n                  <th>Price</th>\n                  <th>Title</th>\n                  <th>Likes</th>\n                  <th>Comments</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n              {myposts && myposts.map(p=>(\n                <tr key={p.id}>\n                  <td>{p.id}</td>\n                  <td>{p.updated_at}</td>\n                  <td>{p.price}</td>\n                  <td>{p.title}</td>\n                  <td>{p.liked_by.length}</td>\n                  <td>{p.comments_count}</td>\n                  <td>\n                  <div className=\"btn-group\" role=\"group\">\n                    <button className=\"btn btn-sm btn-primary\" onClick={()=>goto(\"/product-details\", { state: { productid: p.id } })}>\n                      <i className=\"fa fa-eye\" />\n                    </button>\n                    <button className=\"btn btn-sm btn-danger\" onClick={()=>handlePostDelete(p.id)}>\n                      <i className=\"fa fa-trash\" />\n                    </button>\n                  </div>\n                  </td>\n                </tr>               ))}\n                \n                {/* Add more rows for other posts */}\n              </tbody>\n            </table>\n          </div>           }\n          \n\n          {/* Inbox */}\n          {showTab === 3 && \n<div className=\"inbox\" style={{ width: \"115%\" }}>\n            <h2>Inbox</h2>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>PostID</th>\n                  <th>Name</th>\n                  <th>Phone</th>\n                  <th>Email</th>\n                  <th>Message</th>\n                  <th>Time</th>\n                </tr>\n              </thead>\n              <tbody>\n              {inbox && inbox.map(ms=>(\n                <tr key={`ms-${ms.id}`}>\n                  <td>{ms.post}</td>\n                  <td>{ms.name}</td>\n                  <td>{ms.phone_number}</td>\n                  <td>{ms.email}</td>\n                  <td>{ms.message}</td>\n                  <td>{ms.timestamp}</td>\n                </tr>\n                ))}\n                {/* Add more rows for other messages */}\n              </tbody>\n            </table>\n          </div>        }\n          {showTab === 4 && <>\n            <h2>New Post</h2>\n           <form onSubmit={handleSubmit(handleNewPost)}>\n      <div className=\"form-group mt-4\">\n        <label htmlFor=\"category\">Category</label>\n        <select className=\"form-control\" id=\"category\" name=\"category\"\n        {...register('category', { required: 'Category is required' })}        >\n          <option value=\"\">Select a category</option>\n          {cats && cats.map(c=>(\n            <option value={c.id} key={`cat-${c.id}`}>{c.name}</option>\n            ))}\n        </select>\n  {errors.category && <div className=\"invalid-feedback\">{errors.category.message}</div>}      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"title\">Title</label>\n        <input \n          className=\"form-control\"\n          {...register(\"title\", {\n            required: \"This field is required\",\n          })} \n        />    \n        {errors.title && <small className=\"text-danger\">{errors.title.message}</small>}\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Description</label>\n        <textarea className=\"form-control\" id=\"description\" name=\"description\" rows=\"3\"\n          {...register(\"description\", {\n            required: \"This field is required\",\n          })} \n        ></textarea>\n        {errors.description && <small className=\"text-danger\">{errors.description.message}</small>}\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"dimensions\">Dimensions</label>\n        <input \n          className=\"form-control\"\n          {...register(\"dimensions\", {\n            required: \"This field is required\",\n          })} \n        />    \n        {errors.dimensions && <small className=\"text-danger\">{errors.dimensions.message}</small>}\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"price\">Price</label>\n        <input \n          type=\"number\"\n          className=\"form-control\"\n          {...register(\"price\", {\n            required: \"This field is required\",\n          })} \n        />    \n        {errors.price && <small className=\"text-danger\">{errors.price.message}</small>}\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"address\">Address</label>\n        <textarea className=\"form-control\" id=\"description\" name=\"description\" rows=\"3\"\n          {...register(\"address\", {\n            required: \"This field is required\",\n          })} \n        ></textarea>\n        {errors.address && <small className=\"text-danger\">{errors.address.message}</small>}\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"image\">Image</label>\n        <input type=\"file\" className=\"form-control-file\" id=\"image\" name=\"image\" \n          {...register(\"image\", {\n            required: \"This field is required\",\n          })} \n        />\n        {errors.image && <small className=\"text-danger\">{errors.image.message}</small>}\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"color\">Color</label>\n        <input type=\"color\" className=\"form-control\" id=\"color\" name=\"color\" />\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form> \n          </>}\n        </div>: \"Loading...\"      }\n\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Login.jsx",["90"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { axiosRequest } from \"../api\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Login = ({ logout = false }) => {\n  const goto = useNavigate();\n  const [authErr, setAuthErr] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ shouldUnregister: true });\n  const { setIsAuthenticated, setProfile } = useContext(AuthContext);\n\n  const location = useLocation();\n  const [newUser, setNewUser] = useState(location.state?.registered);\n\n  useEffect(() => {\n    if (authErr) {\n      setTimeout(function() {\n        setAuthErr(false);\n      }, 5000);\n    }\n  }, [authErr]);\n\n  const onSubmit = (data) => {\n    axiosRequest\n      .post(\"/api-token-auth/\", data, {\n        headers: { Authorization: undefined },\n      })\n      .then((res) => {\n        sessionStorage.setItem(\"token\", res.data.token);\n        setIsAuthenticated(true);\n        axiosRequest\n          .get(\"/profile/0/\", {\n            headers: { Authorization: `Token ${res.data.token}` }\n          })\n          .then((response) => {\n            setProfile(response.data);\n            // goto(\"/\");\n            window.location.replace(\"/\")\n          })\n          .catch((err) => {\n            console.log(\"setProfileError: \", err.response.data);\n          });\n      })\n      .catch((err) => {\n        if (err.response.data?.non_field_errors) {\n          setAuthErr(true);\n        }\n      });\n  };\n\n  if (logout) {\n    // perform logout\n    setIsAuthenticated(false);\n    setProfile(null);\n    sessionStorage.setItem(\"token\", null);\n    goto(\"/\");\n  }\n\n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>Signin</h4>\n                <h3 className=\"text-white\">\n                  Singin to the system to buy and sell products\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"best-features about-features\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"section-heading\">\n                <h2>Singin</h2>\n              </div>\n              {newUser && (\n                <div className=\"bg-info p-4 rounded text-white\">\n                  <span>\n                    Your account successfully registered, Signin using your\n                    username and password.\n                  </span>\n                </div>\n              )}\n            </div>\n\n            <form className=\"col-md-12 mt-4\" onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Username</label>\n                <input\n                  placeholder=\"Enter your username\"\n                  className=\"form-control\"\n                  {...register(\"username\", {\n                    required: \"This field is required\",\n                    minLength: {\n                      value: 3,\n                      message: \"Username should have at least 3 characters.\",\n                    },\n                    maxLength: {\n                      value: 6,\n                      message: \"Username should not exceed 6 characters.\",\n                    },\n                  })}\n                />\n                {errors.username && (\n                  <small className=\"text-danger\">\n                    {errors.username.message}\n                  </small>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  {...register(\"password\", {\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.password && (\n                  <small className=\"text-danger\">\n                    {errors.password.message}\n                  </small>\n                )}\n              </div>\n              <span className=\"text-danger d-block\">\n                {authErr && \"Wrong username or password, try again.\"}\n              </span>\n              <button type=\"submit\" className=\"btn btn-primary mt-4\">\n                Login\n              </button>\n              <div className=\"small mt-3\">\n                Don't have an account?\n                <Link to=\"/register\">&nbsp;Create one</Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Register.jsx",["91","92","93","94"],[],"import { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { axiosRequest } from \"../api\";\nimport { AuthContext } from \"../context/AuthContext\";\n\n\nconst Register = () => {\n  const goto = useNavigate()\n  const [authErr, setAuthErr] = useState(false)\n  const { handleSubmit, register, watch, formState: { errors } } = useForm()\n  const { setIsAuthenticated, setProfile } = useContext(AuthContext)\n\n  const onSubmit = (formData) => {\n    axiosRequest\n      .post(\"/register/\", formData, { headers: { Authorization: null } })\n      .then(res=> {\n        if (res.data.username) {\n          goto(\"/login\", { state: { registered: true } })\n        }\n      })\n  }\n  \n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>SignUp</h4>\n                <h3 className=\"text-white\">\n                  Signup to the system to buy and sell products\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"best-features about-features\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"section-heading\">\n                <h2>Singup</h2>\n              </div>\n            </div>\n\n            <form onSubmit={handleSubmit(onSubmit)} className=\"col-md-12\">\n              <div className=\"form-group\">\n                <label>Username *</label>\n                <input \n                  placeholder=\"Enter your username\"\n                  className=\"form-control\"\n                  {...register(\"username\", {\n                    required: \"This field is required\",\n                    minLength: { value: 3, message: \"Username should have at least 3 characters.\" },\n                    maxLength: { value: 6, message: \"Username should not exceed 6 characters.\" },\n                  })} \n                />    \n                {errors.username && <small className=\"text-danger\">{errors.username.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>First Name *</label>\n                <input \n                  placeholder=\"Enter your Firstname\"\n                  className=\"form-control\"\n                  {...register(\"first_name\", {\n                    required: \"This field is required\",\n                    minLength: { value: 3, message: \"Your name should have at least 3 characters.\" },\n                  })} \n                />    \n                {errors.first_name && <small className=\"text-danger\">{errors.first_name.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input \n                  placeholder=\"Enter your Lastname\"\n                  className=\"form-control\"\n                  {...register(\"last_name\", { required: false, })} \n                />    \n                {errors.last_name && <small className=\"text-danger\">{errors.last_name.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address *</label>\n                <input \n                  placeholder=\"Enter your Email\"\n                  className=\"form-control\"\n                  {...register(\"email\", { required: \"This field is required\", })} \n                />    \n                {errors.email && <small className=\"text-danger\">{errors.email.message}</small>}\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label>Password *</label>\n                <input \n                  type=\"password\"\n                  placeholder=\"Enter your Password\"\n                  className=\"form-control\"\n                  {...register(\"password\", { required: \"This field is required\", })} \n                />\n                {errors.password && <small className=\"text-danger\">{errors.password.message}</small>}\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm Password *</label>\n                <input \n                  type=\"password\"\n                  placeholder=\"Confirm your Password\"\n                  className=\"form-control\"\n                  {...register(\"password2\", { \n                    required: \"This field is required\",\n                    validate: (val)=> {\n                      if (val !== watch().password){\n                        return \"Passwords doesn't match\"\n                      }\n                    }\n                  })} \n                />\n                {errors.password2 && <small className=\"text-danger\">{errors.password2.message}</small>}\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary mt-4\">\n                Register\n              </button>\n              <div className=\"small mt-3\">\n                Already have an account?\n                <Link to=\"/login\">&nbsp;Singin</Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Header.jsx",["95"],[],{"ruleId":"96","severity":1,"message":"97","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"100","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":7},{"ruleId":"101","severity":1,"message":"102","line":30,"column":24,"nodeType":"103","messageId":"104","endLine":30,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":34,"column":6,"nodeType":"107","endLine":34,"endColumn":8,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":18,"column":6,"nodeType":"107","endLine":18,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":98,"column":13,"nodeType":"113","endLine":102,"endColumn":15},{"ruleId":"96","severity":1,"message":"114","line":2,"column":29,"nodeType":"98","messageId":"99","endLine":2,"endColumn":38},{"ruleId":"96","severity":1,"message":"115","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":14},{"ruleId":"101","severity":1,"message":"116","line":85,"column":41,"nodeType":"103","messageId":"104","endLine":85,"endColumn":43},{"ruleId":"101","severity":1,"message":"116","line":108,"column":36,"nodeType":"103","messageId":"104","endLine":108,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":111,"column":29,"nodeType":"113","endLine":111,"endColumn":97},{"ruleId":"96","severity":1,"message":"119","line":10,"column":20,"nodeType":"98","messageId":"99","endLine":10,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":18,"column":26,"nodeType":"103","messageId":"104","endLine":18,"endColumn":28},{"ruleId":"105","severity":1,"message":"120","line":19,"column":6,"nodeType":"107","endLine":19,"endColumn":8,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"122","line":31,"column":8,"nodeType":"107","endLine":31,"endColumn":17,"suggestions":"123"},{"ruleId":"101","severity":1,"message":"102","line":53,"column":46,"nodeType":"103","messageId":"104","endLine":53,"endColumn":48},{"ruleId":"117","severity":1,"message":"118","line":100,"column":13,"nodeType":"113","endLine":100,"endColumn":29},{"ruleId":"96","severity":1,"message":"124","line":18,"column":19,"nodeType":"98","messageId":"99","endLine":18,"endColumn":29},{"ruleId":"96","severity":1,"message":"125","line":10,"column":10,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"126","line":10,"column":19,"nodeType":"98","messageId":"99","endLine":10,"endColumn":29},{"ruleId":"96","severity":1,"message":"127","line":12,"column":11,"nodeType":"98","messageId":"99","endLine":12,"endColumn":29},{"ruleId":"96","severity":1,"message":"128","line":12,"column":31,"nodeType":"98","messageId":"99","endLine":12,"endColumn":41},{"ruleId":"96","severity":1,"message":"129","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsAuthenticated', 'setProfile', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'pid'. Either include it or remove the dependency array.",["131"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useParams' is defined but never used.","'Footer' is defined but never used.","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'goto' and 'token'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["133"],"'setNewUser' is assigned a value but never used.","'authErr' is assigned a value but never used.","'setAuthErr' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'NavLink' is defined but never used.",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [setIsAuthenticated, setProfile, token]",{"range":"142","text":"143"},"Update the dependencies array to be: [pid]",{"range":"144","text":"145"},"Update the dependencies array to be: [goto, token]",{"range":"146","text":"147"},"Update the dependencies array to be: [profile, showTab]",{"range":"148","text":"149"},[925,927],"[setIsAuthenticated, setProfile, token]",[628,630],"[pid]",[768,770],"[goto, token]",[1213,1222],"[profile, showTab]"]