[{"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\index.js":"1","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\App.js":"2","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\context\\AuthContext.js":"4","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\api.js":"5","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\ProductDetails.jsx":"6","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Products.jsx":"7","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Home.jsx":"8","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Profile.jsx":"9","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Login.jsx":"10","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Register.jsx":"11","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Footer.jsx":"12","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Header.jsx":"13"},{"size":842,"mtime":1685697880000,"results":"14","hashOfConfig":"15"},{"size":1469,"mtime":1685888447430,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1685697880000,"results":"17","hashOfConfig":"15"},{"size":423,"mtime":1685697880000,"results":"18","hashOfConfig":"15"},{"size":228,"mtime":1685954753233,"results":"19","hashOfConfig":"15"},{"size":8012,"mtime":1685697880000,"results":"20","hashOfConfig":"15"},{"size":5392,"mtime":1685697880000,"results":"21","hashOfConfig":"15"},{"size":2095,"mtime":1685897441642,"results":"22","hashOfConfig":"15"},{"size":12400,"mtime":1685956445198,"results":"23","hashOfConfig":"15"},{"size":4930,"mtime":1685697880000,"results":"24","hashOfConfig":"15"},{"size":5240,"mtime":1685956345633,"results":"25","hashOfConfig":"15"},{"size":352,"mtime":1685889368470,"results":"26","hashOfConfig":"15"},{"size":2323,"mtime":1685896010026,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1q71rs7",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"31"},"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\index.js",[],[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\App.js",["73","74","75","76"],[],"import logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// components\nimport Header from \"./components/Header\"\nimport Footer from \"./components/Footer\"\n// pages\nimport Home from \"./pages/Home\"\nimport Products from \"./pages/Products\"\nimport ProductDetails from './pages/ProductDetails';\nimport Profile from './pages/Profile';\nimport Login from \"./pages/Login\"\nimport Register from \"./pages/Register\"\nimport { useContext, useEffect } from 'react';\nimport { AuthContext } from './context/AuthContext';\nimport { axiosRequest } from './api';\n\nfunction App() {\n  const token = sessionStorage.getItem(\"token\")\n  const { setProfile, setIsAuthenticated } = useContext(AuthContext)\n\n  useEffect(()=>{\n    if (token && token != \"null\"){\n      setIsAuthenticated(true);\n      axiosRequest.get(\"/profile/0/\").then(res=>setProfile(res.data))\n    }\n  }, [])\n\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/products' element={<Products />} />\n        <Route path='/product-details' element={<ProductDetails />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path='/logout' element={<Login logout={true} />} />\n        <Route path='/register' element={<Register />} />\n        <Route path='/profile' element={<Profile />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\context\\AuthContext.js",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\api.js",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\ProductDetails.jsx",["77","78"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { axiosRequest } from \"../api\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useForm } from \"react-hook-form\";\n\nconst ProductDetails = () => {\n  const goto = useNavigate()\n  const location = useLocation();\n  const pid = location.state?.productid;\n  const [post, setPost] = useState(null);\n  const { profile } = useContext(AuthContext)\n\n  useEffect(() => {\n    axiosRequest\n      .get(`/post/${pid}/`, { headers: { Authorization: null } })\n      .then((res) => setPost(res.data));\n  }, []);\n\n  const [newComment, setNewComment] = useState(\"\");\n  const handleCommentChange = (event) => {\n    setNewComment(event.target.value);\n  };\n  const handleCommentSubmit = (event) => {\n    event.preventDefault();\n    if (!profile){ goto(\"/login\") } else {\n      axiosRequest.post(`/post-comments/`, {\n        by_user: profile.user.id,\n        comment: newComment,\n        post: pid,\n      }).then(res=>{\n        setNewComment(\"\");\n        setPost(current=> \n          ({ ...current, \"comments\": [...current.comments, res.data], })\n        )\n       })\n    }\n  };\n\n  const handleLike = ()=>{\n    if (!profile){\n      goto(\"/login\")\n    } else {\n      if (post.liked_by.includes(profile.user.id)){\n        axiosRequest.patch(`/post/${pid}/`, { \n          liked_by: post.liked_by.filter(i=> i!==profile.user.id)\n        });\n        setPost(current=>({\n          ...current,\n          liked_by: post.liked_by.filter(i=> i!== profile.user.id)\n        }))\n      } else {\n        axiosRequest.patch(`/post/${pid}/`, { \n          liked_by: [...post.liked_by, profile.user.id] \n        });\n        setPost(current=>({\n          ...current,\n          liked_by: [...post.liked_by, profile.user.id]\n        }))\n      }\n    }\n  }\n\n  const [showBuyForm, setShowBuyForm] = useState(false)\n  const { handleSubmit, register, formState: { errors } } = useForm()\n  const handleMessageSubmit = (formData) =>{\n    if (!profile){\n      goto(\"/login\")\n    } else {\n      axiosRequest\n        .post(`/inbox/`, {\n          ...formData, \n          post: pid,\n          by_user: profile.user.id,\n        })\n    }\n    alert(\"Your has been successfully sent to the post owner!\")\n  }\n\n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>New arrivals</h4>\n                <h2>Products Page</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {!post ? <h3 align=\"center\" className=\"mt-5\">Loading...</h3>: \n<div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <img\n              src={post.imageurl}\n              alt=\"Product Image\"\n              className=\"img-fluid rounded\"\n            />\n          </div>\n          {!showBuyForm ? \n          <div className=\"col-lg-6\">\n            <h2>{post.title}</h2>\n            <p className=\"mt-2\" style={{ cursor: \"pointer\" }} onClick={handleLike}>\n            <span className=\"d-inline-block\" data-toggle=\"tooltip\" data-placement=\"top\" \n              title={\n                profile\n                  ? post.liked_by.includes(profile.user.id)\n                    ? 'Liked'\n                    : 'Not Liked'\n                  : 'Login to Like'\n              }\n            >\n              <i className={`fa fa-heart mr-2 text-${profile && post.liked_by.includes(profile.user.id) ? \"danger\" : \"dark\"}`} />\n            </span>\n              <strong className=\"font-weight-bold\">{post.liked_by.length}</strong>\n            </p>\n            <p className=\"mt-2\">\n              <strong className=\"font-weight-bold\">Price: ${post.price}</strong>\n            </p>\n            <p className=\"mt-2\">\n              <strong className=\"font-weight-bold\">Dimensions:</strong>&nbsp;{post.dimensions}\n            </p>\n            <p>\n              <strong className=\"font-weight-bold\">Address:</strong>&nbsp;{post.address}\n            </p>\n            <p className=\"mt-2\">{post.description}</p>\n            <p>\n              <strong className=\"font-weight-bold\">Posted:</strong>&nbsp;{post.created_at}\n            </p>\n            <button className=\"btn btn-primary mt-3\" onClick={()=>setShowBuyForm(true)}>Buy Now</button>\n          </div>\n           : <div className=\"col-lg-6\">\n  <button className=\"btn btn-link\" onClick={()=> setShowBuyForm(false)}>\n  <i className=\"fa fa-arrow-left\" /> Product Details\n      </button>\n<form onSubmit={handleSubmit(handleMessageSubmit)} className=\"form mt-4\">\n      <div className=\"form-group \">\n        <label htmlFor=\"name\">Name</label>\n        <input \n          className=\"form-control\"\n          {...register(\"name\", {\n            required: \"This field is required\",\n            minLength: { value: 3, message: \"Your name should have at least 3 characters.\" },\n          })} \n        />    \n        {errors.name && <small className=\"text-danger\">{errors.name.message}</small>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"phoneNumber\">Phone Number</label>\n        <input \n          className=\"form-control\"\n          {...register(\"phone_number\", {\n            required: \"This field is required\",\n            minLength: { value: 10, message: \"Your phone should have at least 10 numbers.\" },\n          })} \n        />    \n        {errors.phone_number && <small className=\"text-danger\">{errors.phone_number.message}</small>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n                <input \n                  className=\"form-control\"\n                  {...register(\"email\", { required: \"This field is required\", })} \n                />    \n                {errors.email && <small className=\"text-danger\">{errors.email.message}</small>}\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"message\">Message</label>\n        <textarea\n          className=\"form-control\"\n          id=\"message\"\n          name=\"message\"\n          rows=\"4\"\n          {...register('message', { required: 'Message is required' })}        \n          ></textarea>\n          {errors.message && <small className=\"text-danger\">{errors.message.message}</small>}\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        {profile? \"Send Message\": \"Login To Contact\"}\n      </button>\n    </form>             \n           </div>}\n        </div>\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h3>User Reviews</h3>\n            {post.comments.length > 0 && post.comments.map(cmnt=>(\n            <div key={cmnt.id} className=\"media mt-3\">\n              <img src={cmnt.user.avatar} style={{ height: \"50px\", width: \"50px\", borderRadius: \"100%\" }} alt=\"User Avatar\" className=\"mr-3\" />\n              <div className=\"media-body\">\n                <h5 className=\"mt-0\">{cmnt.user.name}</h5>\n                <p>{cmnt.timestamp}</p>\n                <p>{cmnt.comment}</p>\n              </div>\n            </div>          \n              ))\n          }\n          </div>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"col-lg-12\">\n            <form onSubmit={handleCommentSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"new-comment\">Add Comment</label>\n                <textarea\n                  id=\"new-comment\"\n                  className=\"form-control\"\n                  value={newComment}\n                  onChange={handleCommentChange}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {profile? \"Submit Comment\": \"Login to add Comment\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>    }\n      \n    </>\n  );\n};\n\nexport default ProductDetails;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Products.jsx",["79","80","81","82","83"],[],"import { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { axiosRequest } from \"../api\";\nimport Footer from \"../components/Footer\";\n\nconst Products = () => {\n  const location = useLocation();\n  const [cat, setCat] = useState(location.state?.cat);\n  const [q, setQ] = useState(\"\");\n\n  const [posts, setPosts] = useState(null);\n  const [categories, setCategories] = useState(null);\n\n  useEffect(() => {\n    setPosts(null);\n    axiosRequest\n      .get(`/post/?category=${cat || \"\"}&search=${q}`, {\n        headers: { Authorization: null },\n      })\n      .then((res) => setPosts((_) => res.data));\n  }, [cat, q]);\n\n  useEffect(() => {\n    axiosRequest\n      .get(`/post-categories/`, { headers: { Authorization: null } })\n      .then((res) =>\n        setCategories([\n          {\n            id: \"\",\n            products_count: \"\",\n            name: \"All Categories\",\n          },\n          ...res.data,\n        ])\n      );\n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const q = e.target[\"search\"].value;\n    const cat = e.target[\"category\"].value;\n    setQ((_) => q);\n    setCat((_) => cat);\n  };\n\n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>new arrivals</h4>\n                <h2>Products Page</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"products\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <form\n              onSubmit={handleSearch}\n              className=\"form col-md-12 row ml-1 mr-1\"\n            >\n              <h3 className=\"Products mb-2\">Products</h3>\n              <input\n                name=\"search\"\n                placeholder=\"Search for products ..\"\n                className=\"form-control\"\n              >\n              </input>\n              <select\n                name=\"category\"\n                className=\"form-control mt-2\"\n                defaultValue={cat}\n              >\n                {categories &&\n                  categories.map((cati) => (\n                    <option\n                      key={cati.id}\n                      value={cati.id}\n                      selected={cati.id == cat}\n                    >\n                      {cati.name}\n                    </option>\n                  ))}\n              </select>\n              <button className=\"btn btn-primary mt-2\">Search</button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"products\" style={{ marginTop: \"2%\" }}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"filters\"></div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"filters-content\">\n                <div className=\"row grid\">\n                  {posts\n                    ? (\n                      posts.length == 0\n                        ? (\n                          <>\n                            <img src=\"https://bagbazaars.com/assets/img/no-product-found.png\" />\n                          </>\n                        )\n                        : (\n                          posts.map((post, i) => (\n                            <div className=\"col-lg-4 col-md-4 all des\" key={i}>\n                              <div className=\"product-item\">\n                                <Link\n                                  to={`/product-details`}\n                                  state={{ productid: post.id }}\n                                >\n                                  <img src={post.imageurl} alt=\"\"\n                                  style={{ width: \"100%\", height: \"280px\" }}\n                                  />\n                                </Link>\n                                <div className=\"down-content\">\n                                  <Link\n                                    to={`/product-details`}\n                                    state={{ productid: post.id }}\n                                  >\n                                    <h4 className=\"w-75\">{post.title}</h4>\n                                  </Link>\n                                  <h6>$18.25</h6>\n                                  <p>{post.description}</p>\n                                  <ul className=\"stars\">\n                                    <li>\n                                      <i className=\"fa fa-heart\" />\n                                    </li>\n                                    <li className=\"ml-1\">\n                                      {post.liked_by.length}\n                                    </li>\n                                  </ul>\n                                  <span>Reviews ({post.comments_count})</span>\n                                </div>\n                              </div>\n                            </div>\n                          ))\n                        )\n                    )\n                    : (\n                      \"Loading\"\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Home.jsx",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Profile.jsx",["84","85","86","87","88"],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Login.jsx",["89"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { axiosRequest } from \"../api\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Login = ({ logout = false }) => {\n  const goto = useNavigate();\n  const [authErr, setAuthErr] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ shouldUnregister: true });\n  const { setIsAuthenticated, setProfile } = useContext(AuthContext);\n\n  const location = useLocation();\n  const [newUser, setNewUser] = useState(location.state?.registered);\n\n  useEffect(() => {\n    if (authErr) {\n      setTimeout(function() {\n        setAuthErr(false);\n      }, 5000);\n    }\n  }, [authErr]);\n\n  const onSubmit = (data) => {\n    axiosRequest\n      .post(\"/api-token-auth/\", data, {\n        headers: { Authorization: undefined },\n      })\n      .then((res) => {\n        sessionStorage.setItem(\"token\", res.data.token);\n        setIsAuthenticated(true);\n        axiosRequest\n          .get(\"/profile/0/\", {\n            headers: { Authorization: `Token ${res.data.token}` }\n          })\n          .then((response) => {\n            setProfile(response.data);\n            // goto(\"/\");\n            window.location.replace(\"/\")\n          })\n          .catch((err) => {\n            console.log(\"setProfileError: \", err.response.data);\n          });\n      })\n      .catch((err) => {\n        if (err.response.data?.non_field_errors) {\n          setAuthErr(true);\n        }\n      });\n  };\n\n  if (logout) {\n    // perform logout\n    setIsAuthenticated(false);\n    setProfile(null);\n    sessionStorage.setItem(\"token\", null);\n    goto(\"/\");\n  }\n\n  return (\n    <>\n      <div className=\"page-heading products-heading header-text\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-content\">\n                <h4>Signin</h4>\n                <h3 className=\"text-white\">\n                  Singin to the system to buy and sell products\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"best-features about-features\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"section-heading\">\n                <h2>Singin</h2>\n              </div>\n              {newUser && (\n                <div className=\"bg-info p-4 rounded text-white\">\n                  <span>\n                    Your account successfully registered, Signin using your\n                    username and password.\n                  </span>\n                </div>\n              )}\n            </div>\n\n            <form className=\"col-md-12 mt-4\" onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Username</label>\n                <input\n                  placeholder=\"Enter your username\"\n                  className=\"form-control\"\n                  {...register(\"username\", {\n                    required: \"This field is required\",\n                    minLength: {\n                      value: 3,\n                      message: \"Username should have at least 3 characters.\",\n                    },\n                    maxLength: {\n                      value: 6,\n                      message: \"Username should not exceed 6 characters.\",\n                    },\n                  })}\n                />\n                {errors.username && (\n                  <small className=\"text-danger\">\n                    {errors.username.message}\n                  </small>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  {...register(\"password\", {\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.password && (\n                  <small className=\"text-danger\">\n                    {errors.password.message}\n                  </small>\n                )}\n              </div>\n              <span className=\"text-danger d-block\">\n                {authErr && \"Wrong username or password, try again.\"}\n              </span>\n              <button type=\"submit\" className=\"btn btn-primary mt-4\">\n                Login\n              </button>\n              <div className=\"small mt-3\">\n                Don't have an account?\n                <Link to=\"/register\">&nbsp;Create one</Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\pages\\Register.jsx",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\lenovo\\Downloads\\Compressed\\DjangoReactEcommerCe-main\\frontend\\src\\components\\Header.jsx",["90"],[],"import { useContext } from \"react\"\nimport { Link, NavLink } from \"react-router-dom\"\nimport { AuthContext } from \"../context/AuthContext\"\nimport { useLocation  } from \"react-router-dom\"\n\nconst Header = ({ props }) => {\n  const { isAuthenticated, profile } = useContext(AuthContext)\n  let location = useLocation();\n  const homeClass = location.pathname === \"/\" ? \"nav-item active\" : \"nav-item\";\n  const productsClass = location.pathname.match(/^\\/products/) ? \"nav-item active\" : \"nav-item\";\n  const profileClass = location.pathname.match(/^\\/profile/) ? \"nav-item active\" : \"nav-item\";\n  const loginClass = location.pathname.match(/^\\/login/) ? \"nav-item active\" : \"nav-item\";\n\n\n return <header className=\"\">\n  <nav className=\"navbar navbar-expand-lg\">\n    <div className=\"container\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <h2>\n          Market <em>Place</em>\n        </h2>\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarResponsive\"\n        aria-controls=\"navbarResponsive\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className={homeClass} >\n            <Link className=\"nav-link\" to=\"/\" >\n              Home\n              <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          <li className={productsClass}>\n            <Link className=\"nav-link\" to=\"/products\">\n              Products\n            </Link>\n          </li>\n        { isAuthenticated && profile?.user\n        ? <>\n          <li className={profileClass}>\n            <Link className=\"nav-link\" to=\"/profile\">\n              Profile - {profile?.user.username}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/logout\">\n              Logout\n            </Link>\n          </li>\n          </> : <li className={loginClass}>\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n          }\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n \n}\n\nexport default Header",{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":8,"column":3,"nodeType":"93","messageId":"94","endLine":8,"endColumn":7},{"ruleId":"96","severity":1,"message":"97","line":30,"column":24,"nodeType":"98","messageId":"99","endLine":30,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":34,"column":6,"nodeType":"102","endLine":34,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":18,"column":6,"nodeType":"102","endLine":18,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":98,"column":13,"nodeType":"108","endLine":102,"endColumn":15},{"ruleId":"91","severity":1,"message":"109","line":2,"column":29,"nodeType":"93","messageId":"94","endLine":2,"endColumn":38},{"ruleId":"91","severity":1,"message":"110","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"111","line":85,"column":41,"nodeType":"98","messageId":"99","endLine":85,"endColumn":43},{"ruleId":"96","severity":1,"message":"111","line":108,"column":36,"nodeType":"98","messageId":"99","endLine":108,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":111,"column":29,"nodeType":"108","endLine":111,"endColumn":97},{"ruleId":"91","severity":1,"message":"114","line":10,"column":20,"nodeType":"93","messageId":"94","endLine":10,"endColumn":35},{"ruleId":"100","severity":1,"message":"115","line":19,"column":6,"nodeType":"102","endLine":19,"endColumn":8,"suggestions":"116"},{"ruleId":"100","severity":1,"message":"117","line":31,"column":8,"nodeType":"102","endLine":31,"endColumn":17,"suggestions":"118"},{"ruleId":"96","severity":1,"message":"97","line":53,"column":46,"nodeType":"98","messageId":"99","endLine":53,"endColumn":48},{"ruleId":"112","severity":1,"message":"113","line":100,"column":13,"nodeType":"108","endLine":100,"endColumn":29},{"ruleId":"91","severity":1,"message":"119","line":18,"column":19,"nodeType":"93","messageId":"94","endLine":18,"endColumn":29},{"ruleId":"91","severity":1,"message":"120","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsAuthenticated', 'setProfile', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'pid'. Either include it or remove the dependency array.",["122"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useParams' is defined but never used.","'Footer' is defined but never used.","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'goto' and 'token'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["124"],"'setNewUser' is assigned a value but never used.","'NavLink' is defined but never used.",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [setIsAuthenticated, setProfile, token]",{"range":"133","text":"134"},"Update the dependencies array to be: [pid]",{"range":"135","text":"136"},"Update the dependencies array to be: [goto, token]",{"range":"137","text":"138"},"Update the dependencies array to be: [profile, showTab]",{"range":"139","text":"140"},[925,927],"[setIsAuthenticated, setProfile, token]",[628,630],"[pid]",[769,771],"[goto, token]",[1214,1223],"[profile, showTab]"]